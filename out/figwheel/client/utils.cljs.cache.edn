;; Analyzed by ClojureScript 1.7.28
{:use-macros nil, :excludes #{}, :name figwheel.client.utils, :imports {}, :requires {string clojure.string, clojure.string clojure.string}, :uses nil, :defs {*print-debug* {:name figwheel.client.utils/*print-debug*, :file "out/figwheel/client/utils.cljs", :line nil, :column nil, :end-line 7, :end-column 29, :dynamic true, :meta {:file "/Users/roman01la/projects/threejs-cljs-playground/out/figwheel/client/utils.cljs", :line 7, :column 16, :end-line 7, :end-column 29, :dynamic true}}, html-env? {:protocol-inline nil, :meta {:file "/Users/roman01la/projects/threejs-cljs-playground/out/figwheel/client/utils.cljs", :line 9, :column 7, :end-line 9, :end-column 16, :arglists (quote ([]))}, :name figwheel.client.utils/html-env?, :variadic false, :file "out/figwheel/client/utils.cljs", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column nil, :line nil, :end-line 9, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, node-env? {:protocol-inline nil, :meta {:file "/Users/roman01la/projects/threejs-cljs-playground/out/figwheel/client/utils.cljs", :line 11, :column 7, :end-line 11, :end-column 16, :arglists (quote ([]))}, :name figwheel.client.utils/node-env?, :variadic false, :file "out/figwheel/client/utils.cljs", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column nil, :line nil, :end-line 11, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, base-url-path {:protocol-inline nil, :meta {:file "/Users/roman01la/projects/threejs-cljs-playground/out/figwheel/client/utils.cljs", :line 13, :column 7, :end-line 13, :end-column 20, :arglists (quote ([]))}, :name figwheel.client.utils/base-url-path, :variadic false, :file "out/figwheel/client/utils.cljs", :end-column 20, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column nil, :line nil, :end-line 13, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, host-env? {:protocol-inline nil, :meta {:file "/Users/roman01la/projects/threejs-cljs-playground/out/figwheel/client/utils.cljs", :line 15, :column 7, :end-line 15, :end-column 16, :arglists (quote ([]))}, :name figwheel.client.utils/host-env?, :variadic false, :file "out/figwheel/client/utils.cljs", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column nil, :line nil, :end-line 15, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, dispatch-custom-event {:protocol-inline nil, :meta {:file "/Users/roman01la/projects/threejs-cljs-playground/out/figwheel/client/utils.cljs", :line 20, :column 7, :end-line 20, :end-column 28, :arglists (quote ([event-name data]))}, :name figwheel.client.utils/dispatch-custom-event, :variadic false, :file "out/figwheel/client/utils.cljs", :end-column 28, :method-params ([event-name data]), :protocol-impl nil, :arglists-meta (nil nil), :column nil, :line nil, :end-line 20, :max-fixed-arity 2, :fn-var true, :arglists (quote ([event-name data]))}, debug-prn {:protocol-inline nil, :meta {:file "/Users/roman01la/projects/threejs-cljs-playground/out/figwheel/client/utils.cljs", :line 26, :column 7, :end-line 26, :end-column 16, :arglists (quote ([o]))}, :name figwheel.client.utils/debug-prn, :variadic false, :file "out/figwheel/client/utils.cljs", :end-column 16, :method-params ([o]), :protocol-impl nil, :arglists-meta (nil nil), :column nil, :line nil, :end-line 26, :max-fixed-arity 1, :fn-var true, :arglists (quote ([o]))}, log {:protocol-inline nil, :meta {:file "/Users/roman01la/projects/threejs-cljs-playground/out/figwheel/client/utils.cljs", :line 34, :column 7, :end-line 34, :end-column 10, :arglists (quote ([x] [level arg])), :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([x] [level arg]), :arglists ([x] [level arg]), :arglists-meta (nil nil)}}, :name figwheel.client.utils/log, :variadic false, :file "out/figwheel/client/utils.cljs", :end-column 10, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([x] [level arg]), :arglists ([x] [level arg]), :arglists-meta (nil nil)}, :method-params ([x] [level arg]), :protocol-impl nil, :arglists-meta (nil nil), :column nil, :line nil, :end-line 34, :max-fixed-arity 2, :fn-var true, :arglists ([x] [level arg])}, eval-helper {:protocol-inline nil, :meta {:file "/Users/roman01la/projects/threejs-cljs-playground/out/figwheel/client/utils.cljs", :line 44, :column 7, :end-line 44, :end-column 18, :arglists (quote ([code {:keys [eval-fn], :as opts}]))}, :name figwheel.client.utils/eval-helper, :variadic false, :file "out/figwheel/client/utils.cljs", :end-column 18, :method-params ([code p__29449]), :protocol-impl nil, :arglists-meta (nil nil), :column nil, :line nil, :end-line 44, :max-fixed-arity 2, :fn-var true, :arglists (quote ([code {:keys [eval-fn], :as opts}]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:else :warn :debug :node :info :error :eval-fn :html}, :order [:node :else :html :info :warn :debug :error :eval-fn]}, :doc nil}